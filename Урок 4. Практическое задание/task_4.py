"""
Задание 4.

Приведены два алгоритма. В них определяется число,
которое встречается в массиве чаще всего.

Сделайте профилировку каждого алгоритма через timeit

Обязательно напишите третью версию (здесь возможно даже решение одной строкой).
Сделайте замеры и опишите, получилось ли у вас ускорить задачу
"""

from timeit import timeit

array = [1, 3, 1, 3, 4, 5, 1]


def func_1():
    m = 0
    num = 0
    for i in array:
        count = array.count(i)
        if count > m:
            m = count
            num = i
    return f'Чаще всего встречается число {num}, ' \
           f'оно появилось в массиве {m} раз(а)'


def func_2():
    new_array = []
    for el in array:
        count2 = array.count(el)
        new_array.append(count2)

    max_2 = max(new_array)
    elem = array[new_array.index(max_2)]
    return f'Чаще всего встречается число {elem}, ' \
           f'оно появилось в массиве {max_2} раз(а)'


def func_3():
    max_number = max(array, key=array.count)
    return f'Чаще всего встречается число {max_number}, ' \
           f'оно появилось в массиве {array.count(max_number)} раз(а)'


def time_check(*args):
    times = {}
    for el in args:
        times[el] = timeit(f'{el}()', globals=globals())
    for key, value in times.items():
        print(f'Время выполнения функции {key}: {value}')


print(func_1())
print(func_2())
print(func_3())

time_check('func_1', 'func_2', 'func_3')

"""
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
Время выполнения функции func_1: 1.8766780000878498
Время выполнения функции func_2: 2.7027711999835446
Время выполнения функции func_3: 1.761011799913831

Самая быстрая 3-яя функция т.к. встроенная, самостоятельно определяет максимальное включение 
количества элементов. Затем 1-ая - цикл. И на последнем 2-ая функция, создающая ко 
всему прочему новый список. 
"""
