"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для четвертого скрипта
"""

"""
Алгоритмы ДЗ 2 Задание 4.	Найти сумму n элементов следующего ряда чисел:
1 -0.5 0.25 -0.125 ...
"""

from memory_profiler import profile


@profile
def cycle(number_of_elements):
    elem = 1
    result = 0
    for i in range(number_of_elements):
        result += elem
        elem = -elem / 2
    print(f'Количество элементов - {number_of_elements}, их сумма - {result}')


@profile
def my_recursion(number_of_elements):
    def sum_of_series(num):
        if num == 0:
            return 0
        return 1 + sum_of_series(num - 1) / - 2
    print(
        f'Количество элементов - {number_of_elements}, их сумма - {sum_of_series(number_of_elements)}')


number = 500
cycle(number)
my_recursion(number)

"""
Цикл занимает меньше памяти, чем рекурсия
"""
